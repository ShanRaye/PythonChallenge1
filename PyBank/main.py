# First we'll import the os module# This will allow us to create file paths across operating systemsimport os# Module for reading CSV filesimport csv# Input file (CSV format)csvpath = os.path.join("Resources","budget_data.csv")# Output file (Text format)outpath = os.path.join("Analysis","budget_data.txt")# Declare and Initialize the variables for aggregating dataminBudget = 0maxBudget = 0minMonth = ''maxMonth = ''minBudgetDelta = 0maxBudgetDelta = 0minMonthDelta = ''maxMonthDelta = ''sumDelta = 0totalBudget = 0lastBudget = 0count = 0# Reading using CSV modulewith open(csvpath) as csvfile:    # CSV reader specifies delimiter and variable that holds contents    csvBudgetData = csv.DictReader(csvfile, delimiter=',')    for monthData in csvBudgetData:        # count the rows        count = count + 1                # Extract the data of interest        thisMonth  = monthData['Date']        thisBudget = int(monthData['Profit/Losses'])        totalBudget = totalBudget + thisBudget        # Is this a new minimum, yes save it        if thisBudget < minBudget:            minBudget = thisBudget            minMonth = thisMonth        # Is this a new maximum, yes save it        if thisBudget > maxBudget:            maxBudget = thisBudget            maxMonth = thisMonth        # If we are past the first row, do changes between rows        if count > 1:            delta = thisBudget - lastBudget            sumDelta = sumDelta + delta            if delta < minBudgetDelta:                minBudgetDelta = delta                minMonthDelta = thisMonth            if delta > maxBudgetDelta:                maxBudgetDelta = delta                maxMonthDelta = thisMonth                        # save the current data for calculating next delta        lastBudget = thisBudget            # **** for: end of loop ****    outText = """Financial Analysis----------------------------Months:         %dTotal:          $%dMinimum:        %s $%dMaximum:        %s $%dMinimum Change: %s $%dMaximum Change: %s $%dAverage Change: $%.2f""" % (count,totalBudget,minMonth,minBudget,maxMonth,maxBudget,minMonthDelta,minBudgetDelta,maxMonthDelta,maxBudgetDelta,float(sumDelta)/float(count-1))print(outText)with open(outpath,"w") as txtFile:    txtFile.write(outText)    